// *
// * Erdmann & Freunde - Nutshell
// * BASE Contao Framework
// * erdmann-freunde.de/nutshell/
// *
// * Lizenziert unter MIT OPEN SOURCE
// *

//
// BASE/TYPE
// --------------------------------------------------

// Headings 1–6.
#{headings()} { // [1]
  font-weight: var(--headings__font-weight);
  font-family: var(--headings__font-family);
  color: var(--headings__color);
}

// H1 — h6: Generate Element Styles from config
// [1] more space between last text-element and new headline
// [2] combined headlines - example: h1 + h2
// [3] correct margin-top for headlines, when in a new content element
// [4] ex: h1 + h2
// [5] base font size
// [6] loop through all viewports and add font-size for every viewport

@each $element,$options in $headlines {
  $count: index(map-keys($headlines), $element);

  %#{$element},
  %_#{$element} {
    $sizes: map-get($options, sizes);
    $line-height: map-get($options, line-height);
    $margin-top: map-get($options, margin-top);
    $margin-bottom: map-get($options, margin-bottom);
    $color: map-get($options, color);
    $font-weight: map-get($options, font-weight);
    $font-family: map-get($options, font-family);
    font-size: map-get($sizes, xs); // [5]
    line-height: $line-height;
    margin-bottom: $margin-bottom;

    @if $color {
      color: $color;
    }

    @if $font-weight {
      font-weight: $font-weight;
    } @else {
      font-weight: var(--headings__font-weight);
    }

    @if $font-family {
      font-family: $font-family;
    } @else {
      font-family: var(--headings__font-family);
    }

    // [6]
    @for $i from 2 through length($sizes) {
      $current: nth($sizes, $i); // $i = 2 = sm, $i = 5 = xl
      $viewport: nth($current, 1);
      $font-size: nth($current, 2);

      @include media-query(screen-#{$viewport}) {
        font-size: $font-size;
      }
    }
  }

  #{$element} {
    @extend %_#{$element};

    $sizes: map-get($options, sizes);
    $line-height: map-get($options, line-height);
    $margin-top: map-get($options, margin-top);
    $margin-bottom: map-get($options, margin-bottom);

    p + &,  // [1]
    ul + &,
    ol + & {
      margin-top: $margin-top;
    }

    .ce_text + .ce_text & {
      &:first-child {
        margin-top: $margin-top;
      }
    }

    @if $count < 6 {
      & + h#{$count + 1} { // [4]
        margin-top: -1 * $margin-bottom;
      }
    }
  }
}

// Paragraph, Lists
p,
ul,
ol {
  margin-top: 0;

  a {
    text-decoration: var(--paragraph__link-decoration);

    &:hover {
      --paragraph__link-decoration: var(--paragraph__link-decoration--hover);
    }
  }

  &:last-child {
    margin-bottom: 0;
  }
}

// Code
code {
  color: var(--code__color);
}

pre {
  padding: 1rem;
  background: var(--pre__color-background);
  color: var(--pre__color);
  overflow-x: scroll;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: var(--hr-border);
}

// list-item with more than one line of text should have additional space to the following list-item
.li--block {
  margin-bottom: 1rem;
}

.ce_text {
  margin-bottom: var(--base-spacing-unit);
}

::selection {
  background: var(--selection-background);
  color: var(--selection-color);
  opacity: 1;
}
